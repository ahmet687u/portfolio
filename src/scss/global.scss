@use "./mixins/" as *;
@use "./variables/" as *;

:root {
  --page-font-size: 16px;
}

::selection {
  color: $default-text-color;
  background-color: $brown-color-first;
}

html {
  font-size: var(--page-font-size);
}

body {
  min-height: 100vh;
  background-color: $body-background-color;
  color: $default-text-color;
}

.page {
  min-height: calc(100vh - $navbar-height);
}

.text {
  font-size: 1rem;
  line-height: 2rem;
  margin: 1rem 0;
}

.flex {
  display: flex;
}

.align-center {
  align-items: center;
}

.my-center {
  display: grid;
  place-items: center;
}

.container {
  width: 100%;
  max-width: 1400px;
  margin: 1rem auto;
  padding: 2rem;
}

.title {
  font-size: 1.8rem;
  text-align: center;
  margin: 2rem 0 3rem 0;
  letter-spacing: .3rem;
  text-align: center;

  h1 {
    position: relative;
    display: inline-block;

    &::after,
    &::before {
      content: "";
      position: absolute;
      background-color: $brown-color-first;
    }

    &::after {
      left: 0;
      bottom: -15px;
      width: 100%;
      height: 2px;
      border-radius: 3px;
    }

    &::before {
      @include rounded-item(12px, false) {
        bottom: -20px;
        left: 50%;
        transform: translateX(-50%, );
      }
    }
  }
}

.card-container {
  display: grid;
  align-content: stretch;
  grid-template-columns: repeat(4, auto);
  gap: 20px;

  @include break-max(1024px) {
    article {
      grid-column: span 2;
    }
  }

  @include break-max(768px) {
    article {
      grid-column: span 3;
    }
  }
}

.loading {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  z-index: 10;
  display: grid;
  place-items: center;
  overflow: hidden;
  background-color: $body-background-color;

  &-circle {
    width: 150px;
    height: 150px;
    position: relative;
    animation: rotate-loading linear 4s infinite;

    &-item {
      position: absolute;
      left: 37%;
      width: 2px;
      height: 100%;
      opacity: .8;
      transition: all .5s;
      transform-origin: 15px;
      background-color: #99887b;
      transform: rotate(calc(360deg / 7 * var(--idc)));

      &::after,
      &::before {
        @include rounded-item(15px, false) {
          content: "";
          position: absolute;
          border: 1px solid #ad8769;
          left: 50%;
          transform: translateX(-50%);
        }
      }

      &::before {
        bottom: 100%;
      }

      &::after {
        top: 100%;
      }
    }
  }
}

.not-found{
  min-height: 100vh;
}

// --- Global Responsive ---
@include break-max(768px) {
  :root {
    --page-font-size: 14px;
  }
}


@keyframes rotate-loading {
  0%,
  100% {
    transform: rotate(-360deg);
  }

  50% {
    transform: rotate(0deg);
  }
}